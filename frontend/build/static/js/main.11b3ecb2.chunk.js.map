{"version":3,"sources":["components/Post/Post.module.scss","pages/Profile/Profile.module.scss","functions.js","pages/Register/Register.module.scss","pages/Login/Login.module.scss","pages/ProfileSettings/ProfileSettings.module.scss","components/Header/Header.module.scss","pages/Feed/Feed.module.scss","components/Postcomment/Postcomment.module.scss","userContext.js","api.js","pages/Register/index.js","pages/Register/Register.js","pages/Login/index.js","pages/Login/Login.js","postsContext.js","usersContext.js","components/Reply/Reply.js","components/Postcomment/index.js","components/Postcomment/Postcomment.js","components/Post/index.js","components/Post/Post.js","pages/Feed/index.js","pages/Feed/Feed.js","pages/Profile/index.js","pages/Profile/Profile.js","pages/ProfileSettings/index.js","pages/ProfileSettings/ProfileSettings.js","components/Header/index.js","components/Header/Header.js","App.js","index.js","components/Reply/Reply.module.scss"],"names":["module","exports","constructDate","d","Date","year","getFullYear","month","getMonth","day","getDate","UserContext","createContext","postRequest","requestBody","fetch","method","body","JSON","stringify","headers","then","header","ok","console","log","Register","useState","emailInput","setemailInput","nameInput","setnameInput","passwordInput","setpasswordInput","rpasswordInput","setrpasswordInput","nameErrorState","setnameErrorstate","emailErrorstate","setemailErrorstate","passwordErrorstate","setpasswordErrorstate","useContext","registerUser","user","setuser","event","a","preventDefault","Array","prototype","forEach","call","target","elements","element","value","query","json","response","window","location","href","errors","message","includes","catch","e","className","classes","container","branding","action","onSubmit","inputContainer","type","name","id","onInput","error","redirection","to","Login","errorState","seterrorState","userLoginHandler","data","login","localStorage","setItem","PostsContext","UsersContext","Reply","props","commentLiked","setcommentLiked","replyState","setreplyState","replyFocusState","setreplyFocusState","replyMsg","setreplyMsg","posts","setposts","users","replyInput","setusers","React","createRef","useEffect","found","reply","likedBy","_id","comments","commDiv","flex","src","avatar","alt","smImg","comment","bold","poster","userName","commCaption","caption","comLikeButton","onClick","postClone","post","commentClone","commentsClone","userLikedArr","replies","replyIndex","filter","commentIndex","allPosts","index","arr","setposted","commLikes","length","replyBtn","inputAComment","placeholder","onChange","onFocus","onBlur","ref","line2","line","btnGrp","postCancelBtn","postReplyBtn","newComment","date","repliesArr","postCopy","current","Postcomment","commentReplies","setcommentReplies","showReplies","setshowReplies","Number","replyCommInput","viewReplies","hideReplies","map","key","setcomments","replyHandler","Post","commentState","setcommentState","liked","setliked","setpost","commentInput","cardContainer","card","cardUser","cardUsername","picture","cardImage","commentSection","socialIcons","likeButton","allposts","commentButton","likeSection","counter","addAComment","postAComment","commentsArr","Feed","setpostposted","posted","Profile","following","setfollowing","isFollowing","profileUser","followedBy","profile","profileSection","profileStats","firstRow","editBtn","followBtn","loggedInUser","loggedInUserFollowingArr","loggedInFollowedArr","phoneNumber","gender","bio","email","fullName","allUsers","profileIndex","profileUserFollowedArr","profileFollowingArr","logggedInFollowingArr","profileFollowedArr","secondRow","followers","postSection","noPosts","ProfileSettings","profileInfo","setprofileInfo","setprofile","emailError","setemailError","userNameError","setuserNameError","passwordError","setpasswordError","changePassword","setchangePassword","uploadBtn","userNameInput","bioInput","phoneInput","genderInput","oldPassInput","newPassInput","rnewPassInput","parse","getItem","profileInputHandler","changeAvatar","FormData","append","files","Axios","res","userClone","userIndex","findIndex","findUser","settings","sideBar","editProfile","active","avatarContainer","click","hidden","nameUser","htmlFor","focus","defaultValue","phone","submitBtn","nameCopy","userNameCopy","bioCopy","phoneCopy","genderCopy","emailCopy","userCopy","password","passwordBtn","newPass","rnewPass","oldPass","Header","postFormState","setpostFormState","captionState","setcaptionState","fileState","setfileState","filteredUsers","setfilteredUsers","background","postContainer","btnContainer","cancelBtn","postBtn","axios","statusText","postsArr","headerContainer","logo","verticalLine","desktop","searchContainer","searchIcon","searchBar","displayUsers","toLowerCase","userLinkContainer","invisible","overFlow","info","userLink","userInfo","nickName","realName","icons","togglePost","removeItem","App","useMemo","postsValue","usersValue","useLocation","token","userId","postsCopy","consumer","pathname","Provider","path","component","exact","label","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11b3ecb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Post_headerContainer__1Hiw4\",\"active\":\"Post_active__7jshc\",\"verticalLine\":\"Post_verticalLine__3IREy\",\"logo\":\"Post_logo__hKr0u\",\"icons\":\"Post_icons__2ef1F\",\"searchBar\":\"Post_searchBar__Qmi1O\",\"searchContainer\":\"Post_searchContainer__2yM0Z\",\"cardContainer\":\"Post_cardContainer__3Suvl\",\"card\":\"Post_card__2giy2\",\"smImg\":\"Post_smImg__DjTLr\",\"cardUser\":\"Post_cardUser__2MyNK\",\"cardImage\":\"Post_cardImage__3w1Mi\",\"socialIcons\":\"Post_socialIcons__GIy2D\",\"likeSection\":\"Post_likeSection__29p3y\",\"addAComment\":\"Post_addAComment__3tfkq\",\"inputAComment\":\"Post_inputAComment__1X3Qf\",\"postAComment\":\"Post_postAComment__4hdDJ\",\"desktop\":\"Post_desktop__27ERl\",\"card-container\":\"Post_card-container__33FB8\",\"card-image\":\"Post_card-image__LCudh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__UpD-D\",\"profileSection\":\"Profile_profileSection__3RqMu\",\"avatar\":\"Profile_avatar__2MTYU\",\"profileStats\":\"Profile_profileStats__ajYEv\",\"firstRow\":\"Profile_firstRow__14F8_\",\"userName\":\"Profile_userName__23L12\",\"editBtn\":\"Profile_editBtn__1HfBK\",\"followBtn\":\"Profile_followBtn__2swPQ\",\"secondRow\":\"Profile_secondRow__3oHhw\",\"followers\":\"Profile_followers__3s5Yb\",\"postSection\":\"Profile_postSection__2YIdD\",\"noPosts\":\"Profile_noPosts__3-YSc\",\"post\":\"Profile_post__1An_L\"};"," const constructDate = () => {\r\n  let d = new Date()\r\n  let year = d.getFullYear()\r\n  let monthNumber = d.getMonth()\r\n  var months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\n  let month = months[monthNumber]\r\n  let day = d.getDate()\r\n  let completeDate = `${day} ${month} ${year}`\r\n  return completeDate\r\n}\r\n\r\nexports.constructDate = constructDate","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Register_container__1eEta\",\"branding\":\"Register_branding__4nVK4\",\"inputContainer\":\"Register_inputContainer__wrmyr\",\"redirection\":\"Register_redirection__3Ni-Y\",\"error\":\"Register_error__3wmRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Login_container__2c904\",\"branding\":\"Login_branding__3kgM_\",\"inputContainer\":\"Login_inputContainer__2Ff6z\",\"redirection\":\"Login_redirection__9ZKDm\",\"error\":\"Login_error__3mB13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"ProfileSettings_settings__lsqw0\",\"sideBar\":\"ProfileSettings_sideBar__1J2FE\",\"editProfile\":\"ProfileSettings_editProfile__2tPD_\",\"changePassword\":\"ProfileSettings_changePassword__3ymp7\",\"profile\":\"ProfileSettings_profile__2C88o\",\"avatarContainer\":\"ProfileSettings_avatarContainer__18vFY\",\"avatar\":\"ProfileSettings_avatar__3yJ3A\",\"nameUser\":\"ProfileSettings_nameUser__1hewI\",\"bio\":\"ProfileSettings_bio__1Kh2r\",\"name\":\"ProfileSettings_name__Ke6mr\",\"userName\":\"ProfileSettings_userName__OxeVb\",\"phone\":\"ProfileSettings_phone__pdtBt\",\"email\":\"ProfileSettings_email__gUHOm\",\"gender\":\"ProfileSettings_gender__37SGv\",\"password\":\"ProfileSettings_password__3rB0T\",\"submitBtn\":\"ProfileSettings_submitBtn__3qeNJ\",\"passwordBtn\":\"ProfileSettings_passwordBtn__3Fq-C\",\"active\":\"ProfileSettings_active__2c2zW\",\"hidden\":\"ProfileSettings_hidden__3gH-J\",\"error\":\"ProfileSettings_error__3_tJv\",\"passwordError\":\"ProfileSettings_passwordError__3VXmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"invisible\":\"Header_invisible__2D76R\",\"overFlow\":\"Header_overFlow__2ZPcn\",\"togglePost\":\"Header_togglePost__2OHuy\",\"searchIcon\":\"Header_searchIcon__2pHLl\",\"bold\":\"Header_bold__3kN7f\",\"commDiv\":\"Header_commDiv__2RG1s\",\"headerContainer\":\"Header_headerContainer__3xJ2r\",\"active\":\"Header_active__2RAiC\",\"verticalLine\":\"Header_verticalLine__3346A\",\"logo\":\"Header_logo__7SHmh\",\"icons\":\"Header_icons__1Sb7J\",\"searchBar\":\"Header_searchBar__3IoM2\",\"searchContainer\":\"Header_searchContainer__30Ui_\",\"userLinkContainer\":\"Header_userLinkContainer__MWGRR\",\"userLink\":\"Header_userLink__2TV8s\",\"smImg\":\"Header_smImg__1Mjbc\",\"userInfo\":\"Header_userInfo__1FUIX\",\"fullName\":\"Header_fullName__2P6Kf\",\"realName\":\"Header_realName__2ExG3\",\"cardContainer\":\"Header_cardContainer__1NIBz\",\"card\":\"Header_card__123PW\",\"cardUser\":\"Header_cardUser__1HdKp\",\"cardImage\":\"Header_cardImage__2tV5R\",\"socialIcons\":\"Header_socialIcons__HScRK\",\"likeSection\":\"Header_likeSection__1hhis\",\"addAComment\":\"Header_addAComment__7hUUF\",\"inputAComment\":\"Header_inputAComment__16l3h\",\"background\":\"Header_background__2U4wf\",\"btnContainer\":\"Header_btnContainer__2uiAN\",\"postBtn\":\"Header_postBtn__2ZgmJ\",\"cancelBtn\":\"Header_cancelBtn__1yDFx\",\"card-container\":\"Header_card-container__3Mfya\",\"card-image\":\"Header_card-image__1kAPw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"togglePost\":\"Feed_togglePost__1xqCp\",\"searchIcon\":\"Feed_searchIcon__s4Fw8\",\"bold\":\"Feed_bold__19IXC\",\"commDiv\":\"Feed_commDiv__2Vs4_\",\"headerContainer\":\"Feed_headerContainer__3IQYX\",\"active\":\"Feed_active__22-9A\",\"verticalLine\":\"Feed_verticalLine__1JTvb\",\"logo\":\"Feed_logo__3WQjb\",\"icons\":\"Feed_icons__1CnnF\",\"searchBar\":\"Feed_searchBar__cL-uj\",\"searchContainer\":\"Feed_searchContainer__2C-U9\",\"cardContainer\":\"Feed_cardContainer__3kUpo\",\"card\":\"Feed_card__2ACzi\",\"smImg\":\"Feed_smImg__3WNwr\",\"cardUser\":\"Feed_cardUser__26YI7\",\"cardImage\":\"Feed_cardImage__OLZv4\",\"socialIcons\":\"Feed_socialIcons__3HSSi\",\"likeSection\":\"Feed_likeSection__3tzo8\",\"addAComment\":\"Feed_addAComment__28yPZ\",\"inputAComment\":\"Feed_inputAComment__12Jzr\",\"background\":\"Feed_background__FFGwI\",\"btnContainer\":\"Feed_btnContainer__35SH9\",\"postBtn\":\"Feed_postBtn__1a1Xh\",\"cancelBtn\":\"Feed_cancelBtn__1OvwY\",\"card-container\":\"Feed_card-container__19qUU\",\"card-image\":\"Feed_card-image__3HzKR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"Postcomment_bold___0rYb\",\"commDiv\":\"Postcomment_commDiv__XcZPv\",\"commLikes\":\"Postcomment_commLikes__1a6cW\",\"smImg\":\"Postcomment_smImg__1kQlR\",\"flex\":\"Postcomment_flex__3wyZn\",\"replyBtn\":\"Postcomment_replyBtn__PCfMC\",\"inputAComment\":\"Postcomment_inputAComment__15fcS\",\"line\":\"Postcomment_line__18j-X\",\"line2\":\"Postcomment_line2__1ePJb\",\"container\":\"Postcomment_container__3Q746\",\"btnGrp\":\"Postcomment_btnGrp__2FZSP\",\"postCancelBtn\":\"Postcomment_postCancelBtn__3lrok\",\"postReplyBtn\":\"Postcomment_postReplyBtn__3LaLj\",\"viewReplies\":\"Postcomment_viewReplies__fQJAh\",\"hideReplies\":\"Postcomment_hideReplies__ws6Fm\"};","import { createContext } from 'react'\r\n\r\nexport const UserContext = createContext({})\r\n","export const postRequest = (requestBody) => {\r\n  return fetch('http://localhost:8000/graphql', {\r\n    method: 'POST',\r\n    body: JSON.stringify(requestBody),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  }).then((header) => {\r\n    if (header.ok) {\r\n      return header\r\n    } else {\r\n      console.log(header)\r\n    }\r\n  })\r\n}\r\n","import { Register } from './Register'\r\nexport default Register\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Register.module.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { UserContext } from '../../userContext'\r\nimport { postRequest } from '../../api'\r\n\r\nexport const Register = () => {\r\n  const [emailInput, setemailInput] = useState('')\r\n\r\n  const [nameInput, setnameInput] = useState('')\r\n\r\n  const [passwordInput, setpasswordInput] = useState('')\r\n\r\n  const [rpasswordInput, setrpasswordInput] = useState('')\r\n\r\n  const [nameErrorState, setnameErrorstate] = useState(false)\r\n\r\n  const [emailErrorstate, setemailErrorstate] = useState(false)\r\n\r\n  const [passwordErrorstate, setpasswordErrorstate] = useState(false)\r\n\r\n  const { user, setuser } = useContext(UserContext)\r\n\r\n  const emailInputHandler = (event) => {\r\n    setemailInput(event.target.value)\r\n  }\r\n\r\n  const nameInputHandler = (event) => {\r\n    setnameInput(event.target.value)\r\n  }\r\n\r\n  const passwordInputHandler = (event) => {\r\n    setpasswordInput(event.target.value)\r\n  }\r\n\r\n  const rpasswordInputHandler = (event) => {\r\n    setrpasswordInput(event.target.value)\r\n  }\r\n\r\n  const registerUser = async (event) => {\r\n    event.preventDefault()\r\n\r\n    Array.prototype.forEach.call(event.target.elements, (element) => {\r\n      element.value = ''\r\n    })\r\n    if (\r\n      passwordInput !== rpasswordInput ||\r\n      passwordInput === '' ||\r\n      rpasswordInput === ''\r\n    ) {\r\n      setpasswordErrorstate(true)\r\n    } else {\r\n      setpasswordErrorstate(false)\r\n      let requestBody = {\r\n        query: `mutation {\r\n        createUser(userInput: {\r\n          userName: \"${nameInput}\"\r\n          password: \"${passwordInput}\"\r\n          email: \"${emailInput}\"\r\n          avatar: \"test.jpg\"\r\n          followedBy: []\r\n          following: []\r\n          bio: \"\"\r\n          gender: \"\"\r\n          phoneNumber: \"\"\r\n          fullName: \"asd\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n      }\r\n\r\n      postRequest(requestBody).then((header) => {\r\n        return header\r\n          .json()\r\n          .then((response) => {\r\n            console.log(response)\r\n            if (response) {\r\n              window.location.href = '/login'\r\n            } else {\r\n              console.log(response.errors[0].message)\r\n              if (response.errors[0].message.includes('Email')) {\r\n                setemailErrorstate(true)\r\n                setnameErrorstate(false)\r\n              } else {\r\n                setnameErrorstate(true)\r\n                setemailErrorstate(false)\r\n              }\r\n            }\r\n\r\n            // alert('Registration successful')\r\n          })\r\n          .catch((e) => {\r\n            console.log(e)\r\n          })\r\n      })\r\n      // console.log(response)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        <h1 className={classes.branding}>Instagram</h1>\r\n        <p>Sign up to see photos and videos from your friends.</p>\r\n        <form action='' onSubmit={registerUser}>\r\n          <div className={classes.inputContainer}>\r\n            <span>Please enter your email</span>\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              id='registerEmail'\r\n              onInput={emailInputHandler}\r\n            />\r\n          </div>\r\n          {emailErrorstate ? (\r\n            <span className={classes.error}>\r\n              This email address is already taken\r\n            </span>\r\n          ) : null}\r\n\r\n          <div className={classes.inputContainer}>\r\n            <span>enter username</span>\r\n            <input\r\n              type='text'\r\n              name='username'\r\n              id='registerUsername'\r\n              onInput={nameInputHandler}\r\n            />\r\n          </div>\r\n          {nameErrorState ? (\r\n            <span className={classes.error}>\r\n              This Username is already taken\r\n            </span>\r\n          ) : null}\r\n\r\n          <div className={classes.inputContainer}>\r\n            <span>enter password</span>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              id='registerPassword'\r\n              onInput={passwordInputHandler}\r\n            />\r\n          </div>\r\n\r\n          <div className={classes.inputContainer}>\r\n            <span>repeat password</span>\r\n            <input\r\n              type='password'\r\n              name='rpassword'\r\n              id='registerRPassword'\r\n              onInput={rpasswordInputHandler}\r\n            />\r\n          </div>\r\n          {passwordErrorstate ? (\r\n            <span className={classes.error}>\r\n              Please check if you entered the password correctly\r\n            </span>\r\n          ) : null}\r\n          <button type='click' id='registerSubmitBtn'>\r\n            Sign Up\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className={classes.redirection}>\r\n        Have an account? <Link to='/login'>Log in</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Login } from './Login'\r\nexport default Login\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Login.module.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport { postRequest } from '../../api'\r\nexport const Login = () => {\r\n  const [emailInput, setemailInput] = useState('')\r\n  const [errorState, seterrorState] = useState(false)\r\n  const [passwordInput, setpasswordInput] = useState('')\r\n\r\n  const emailInputHandler = (event) => {\r\n    setemailInput(event.target.value)\r\n  }\r\n  const passwordInputHandler = (event) => {\r\n    setpasswordInput(event.target.value)\r\n  }\r\n  const userLoginHandler = async (event) => {\r\n    event.preventDefault()\r\n    Array.prototype.forEach.call(event.target.elements, (element) => {\r\n      element.value = ''\r\n    })\r\n\r\n    let requestBody = {\r\n      query: `query{\r\n  login(email: \"${emailInput}\", password: \"${passwordInput}\")\r\n  {\r\n    userId\r\n    token\r\n  }\r\n}`,\r\n    }\r\n\r\n    postRequest(requestBody)\r\n      .then((header) => {\r\n        return header.json()\r\n      })\r\n      .then((response) => {\r\n        if (response.data.login === null) {\r\n          seterrorState(true)\r\n        } else {\r\n          localStorage.setItem('token', JSON.stringify(response.data.login))\r\n          window.location.href = `https://copygram-3f03b.web.app/`\r\n        }\r\n      })\r\n  }\r\n  console.log('testing')\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <h1 className={classes.branding}>Instagram</h1>\r\n        <form action='' onSubmit={userLoginHandler}>\r\n          <div className={classes.inputContainer}>\r\n            <span>Please enter your email</span>\r\n            <input\r\n              type='email'\r\n              name='email'\r\n              id='loginEmail'\r\n              onInput={emailInputHandler}\r\n            />\r\n          </div>\r\n          <div className={classes.inputContainer}>\r\n            <span>enter password</span>\r\n            <input\r\n              type='password'\r\n              name='password'\r\n              id='loginPassword'\r\n              onInput={passwordInputHandler}\r\n            />\r\n          </div>\r\n          {errorState ? (\r\n            <span className={classes.error}>Incorrect email or password.</span>\r\n          ) : null}\r\n\r\n          <button type='click' id='loginSubmitBtn'>\r\n            Log In\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <div className={classes.redirection}>\r\n        Don't have an account? <Link to='/register'>Register</Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { createContext } from 'react'\r\n\r\nexport const PostsContext = createContext([])\r\n","import { createContext } from 'react'\r\n\r\nexport const UsersContext = createContext({})\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Reply.module.scss'\r\nimport { UserContext } from '../../userContext'\r\nimport { constructDate } from '../../functions'\r\nimport { PostsContext } from '../../postsContext'\r\nimport { UsersContext } from '../../usersContext'\r\nimport { postRequest } from '../../api'\r\nexport const Reply = (props) => {\r\n  const [commentLiked, setcommentLiked] = useState(false)\r\n  const [replyState, setreplyState] = useState(false)\r\n  const [replyFocusState, setreplyFocusState] = useState(false)\r\n  const [replyMsg, setreplyMsg] = useState('')\r\n  const { user, setuser } = useContext(UserContext)\r\n  const { posts, setposts } = useContext(PostsContext)\r\n  const { users, setusers } = useContext(UsersContext)\r\n  const replyInput = React.createRef()\r\n  useEffect(() => {\r\n    const usersWhoLikedCommArr = [...props.reply.likedBy]\r\n    const found = usersWhoLikedCommArr.includes(user._id)\r\n    if (found) {\r\n      setcommentLiked(true)\r\n    } else {\r\n      setcommentLiked(false)\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [users])\r\n\r\n  // function for liking a reply\r\n  const replyLikeBtnHandler = () => {\r\n    const postClone = { ...props.post }\r\n    const commentClone = { ...props.comment }\r\n    const commentsClone = [...props.comments]\r\n\r\n    commentClone.replies[props.replyIndex].likedBy = [\r\n      ...commentClone.replies[props.replyIndex].likedBy,\r\n      user._id,\r\n    ]\r\n    commentsClone[props.commentIndex] = commentClone\r\n\r\n    postClone.comments = commentsClone\r\n\r\n    const arr = JSON.stringify(commentClone.replies[props.replyIndex].likedBy)\r\n\r\n    const allPosts = [...posts]\r\n    allPosts[props.index] = postClone\r\n\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        replyUpdate(replyUpdateInput: {\r\n          id: \"${props.reply._id}\"\r\n          likedBy: ${arr}\r\n        }) \r\n        \r\n         {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    setcommentLiked(true)\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) props.setposted(allPosts)\r\n    })\r\n  }\r\n\r\n  // function for unliking a reply\r\n  const replyUnlikeBtnHandler = () => {\r\n    const postClone = { ...props.post }\r\n    const commentClone = { ...props.comment }\r\n    const commentsClone = [...props.comments]\r\n\r\n    const userLikedArr = commentClone.replies[props.replyIndex].likedBy.filter(\r\n      (user) => user._id !== user._id\r\n    )\r\n    commentClone.replies[props.replyIndex].likedBy = userLikedArr\r\n\r\n    commentsClone[props.commentIndex] = commentClone\r\n\r\n    postClone.comments = commentsClone\r\n\r\n    const allPosts = [...posts]\r\n\r\n    allPosts[props.index] = postClone\r\n\r\n    const arr = JSON.stringify(userLikedArr)\r\n\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        replyUpdate(replyUpdateInput: {\r\n          id: \"${props.reply._id}\"\r\n          likedBy: ${arr}\r\n        }) \r\n        \r\n         {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    setcommentLiked(false)\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) props.setposted(allPosts)\r\n    })\r\n  }\r\n\r\n  const replyMsgHandler = (event) => {\r\n    setreplyMsg(event.target.value)\r\n  }\r\n\r\n  const replyStateHandler = () => {\r\n    setreplyState(true)\r\n  }\r\n\r\n  const onFocus = () => {\r\n    setreplyFocusState(true)\r\n  }\r\n  const onBlur = () => {\r\n    setreplyFocusState(false)\r\n  }\r\n\r\n  const cancelBtnHandler = () => {\r\n    setreplyState(false)\r\n  }\r\n\r\n  const replyBtnHandler = () => {\r\n    const newComment = {\r\n      caption: `@${props.comment.poster.userName} ${replyMsg}`,\r\n      poster: user._id,\r\n      likedBy: [],\r\n      comment: props.comment._id,\r\n      date: constructDate(),\r\n    }\r\n    console.log('asd')\r\n    const requestBody = {\r\n      query: `mutation {\r\n        createReply(replyInput: {\r\n          caption: \"@${props.comment.poster.userName} ${replyMsg}\"\r\n          poster: \"${user._id}\"\r\n          likedBy: []\r\n          comment: \"${props.comment._id}\"\r\n          date: \"${constructDate()}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n    const allPosts = [...posts]\r\n    const repliesArr = [...props.comment.replies, newComment]\r\n    const postCopy = { ...props.post }\r\n    postCopy.comments[props.commentIndex].replies = repliesArr\r\n    allPosts[props.index] = postCopy\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) props.setposted(allPosts)\r\n    })\r\n    replyInput.current.value = ''\r\n  }\r\n\r\n  return (\r\n    <div className={classes.comments}>\r\n      <div className={classes.commDiv}>\r\n        <div className={classes.flex}>\r\n          <img\r\n            src={`images/avatars/${user.avatar}`}\r\n            alt=''\r\n            className={classes.smImg}\r\n          />\r\n          <div className={classes.comment}>\r\n            <span className={classes.bold}>{props.reply.poster.userName}</span>\r\n            <span className={classes.commCaption}>{props.reply.caption}</span>\r\n          </div>\r\n        </div>\r\n        {!commentLiked ? (\r\n          <span className={classes.comLikeButton}>\r\n            <i className='far fa-heart' onClick={replyLikeBtnHandler}></i>\r\n          </span>\r\n        ) : (\r\n          <span className={classes.comLikeButton}>\r\n            <i className='fas fa-heart' onClick={replyUnlikeBtnHandler}></i>\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      <span className={classes.commLikes}>\r\n        {props.reply.likedBy.length} likes\r\n      </span>\r\n      <span className={classes.replyBtn} onClick={replyStateHandler}>\r\n        reply\r\n      </span>\r\n      {replyState ? (\r\n        <div className={classes.container}>\r\n          <input\r\n            className={classes.inputAComment}\r\n            type='text'\r\n            placeholder='Add a public reply...'\r\n            onChange={replyMsgHandler}\r\n            name='commentInput'\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            ref={replyInput}\r\n          />\r\n          <div\r\n            className={!replyFocusState ? classes.line : classes.line2}\r\n          ></div>\r\n          <div className={classes.btnGrp}>\r\n            <div className={classes.postCancelBtn} onClick={cancelBtnHandler}>\r\n              CANCEL\r\n            </div>\r\n            <div className={classes.postReplyBtn} onClick={replyBtnHandler}>\r\n              POST\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n","import { Postcomment } from './Postcomment'\r\nexport default Postcomment\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Postcomment.module.scss'\r\nimport { Reply } from '../Reply/Reply'\r\nimport { UserContext } from '../../userContext'\r\nimport { constructDate } from '../../functions'\r\nimport { postRequest } from '../../api'\r\nimport { PostsContext } from '../../postsContext'\r\n\r\nexport const Postcomment = (props) => {\r\n  const [commentLiked, setcommentLiked] = useState(false)\r\n\r\n  const [replyState, setreplyState] = useState(false)\r\n\r\n  const [replyFocusState, setreplyFocusState] = useState(false)\r\n\r\n  const [replyMsg, setreplyMsg] = useState('')\r\n\r\n  const [commentReplies, setcommentReplies] = useState([])\r\n\r\n  const [showReplies, setshowReplies] = useState(false)\r\n\r\n  const [replyCount, setreplyCount] = useState(Number)\r\n\r\n  const replyCommInput = React.createRef()\r\n\r\n  const { user, setuser } = useContext(UserContext)\r\n\r\n  const { posts, setposts } = useContext(PostsContext)\r\n\r\n  useEffect(() => {\r\n    const usersWhoLikedCommArr = [...props.comment.likedBy]\r\n    const found = usersWhoLikedCommArr.includes(`${user._id}`)\r\n    if (found) {\r\n      setcommentLiked(true)\r\n    } else {\r\n      setcommentLiked(false)\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setcommentReplies(props.comment.replies)\r\n  }, [posts])\r\n\r\n  // function for liking a comment\r\n  const comLikeBtnHandler = () => {\r\n    const postClone = { ...props.post }\r\n    const commentClone = { ...props.comment }\r\n    const commentsClone = [...props.comments]\r\n\r\n    commentClone.likedBy = [...commentClone.likedBy, user._id]\r\n\r\n    commentsClone[props.commentIndex] = commentClone\r\n\r\n    postClone.comments = commentsClone\r\n\r\n    const arr = JSON.stringify(commentClone.likedBy)\r\n\r\n    const allPosts = [...props.posts]\r\n\r\n    allPosts[props.index] = postClone\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        commentUpdate(commentUpdateInput: {\r\n          id: \"${props.comment._id}\"\r\n          likedBy: ${arr}\r\n\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n\r\n    setcommentLiked(true)\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        setposts(allPosts)\r\n        props.setposted(allPosts)\r\n      }\r\n    })\r\n  }\r\n  // function for unliking a comment\r\n  const comUnlikeBtnHandler = () => {\r\n    const postClone = { ...props.post }\r\n    const commentClone = { ...props.comment }\r\n    const commentsClone = [...props.comments]\r\n\r\n    const userLikedArr = commentClone.likedBy.filter(\r\n      (user) => user._id !== user._id\r\n    )\r\n\r\n    commentClone.likedBy = userLikedArr\r\n\r\n    commentsClone[props.commentIndex] = commentClone\r\n\r\n    postClone.comments = commentsClone\r\n\r\n    const arr = JSON.stringify(userLikedArr)\r\n\r\n    const allPosts = [...props.posts]\r\n\r\n    allPosts[props.index] = postClone\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        commentUpdate(commentUpdateInput: {\r\n          id: \"${props.comment._id}\"\r\n          likedBy: ${arr}\r\n\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n\r\n    setcommentLiked(false)\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        props.setposted(allPosts)\r\n        setposts(allPosts)\r\n      }\r\n    })\r\n  }\r\n\r\n  const replyMsgHandler = (event) => {\r\n    setreplyMsg(event.target.value)\r\n  }\r\n\r\n  const replyStateHandler = () => {\r\n    setreplyState(true)\r\n  }\r\n\r\n  const onFocus = () => {\r\n    setreplyFocusState(true)\r\n  }\r\n  const onBlur = () => {\r\n    setreplyFocusState(false)\r\n  }\r\n\r\n  const cancelBtnHandler = () => {\r\n    setreplyState(false)\r\n  }\r\n\r\n  const replyBtnHandler = () => {\r\n    const newComment = {\r\n      caption: `@${props.comment.poster.userName} ${replyMsg}`,\r\n      poster: user._id,\r\n      likedBy: [],\r\n      comment: props.comment._id,\r\n      date: constructDate(),\r\n    }\r\n\r\n    const requestBody = {\r\n      query: `mutation {\r\n        createReply(replyInput: {\r\n          caption: \"@${props.comment.poster.userName} ${replyMsg}\"\r\n          poster: \"${user._id}\"\r\n          likedBy: []\r\n          comment: \"${props.comment._id}\"\r\n          date: \"${constructDate()}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n\r\n    const repliesArr = [...props.comment.replies, newComment]\r\n    const postCopy = { ...props.post }\r\n    postCopy.comments[props.commentIndex].replies = repliesArr\r\n    const allPosts = [...props.posts]\r\n    allPosts[props.index] = postCopy\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) props.setposted(allPosts)\r\n    })\r\n    replyCommInput.current.value = ''\r\n  }\r\n  const viewReplies = () => {\r\n    setshowReplies(true)\r\n  }\r\n  const hideReplies = () => {\r\n    setshowReplies(false)\r\n  }\r\n  const viewRepliesRender = () => {\r\n    if (props.comment.replies.length >= 1) {\r\n      if (!showReplies) {\r\n        return (\r\n          <div\r\n            className={classes.viewReplies}\r\n            onClick={viewReplies}\r\n          >{`View ${props.comment.replies.length} replies`}</div>\r\n        )\r\n      } else {\r\n        return (\r\n          <div\r\n            className={classes.hideReplies}\r\n            onClick={hideReplies}\r\n          >{`Hide ${props.comment.replies.length} replies`}</div>\r\n        )\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n  const replyHandler = (reply, replyIndex) => {\r\n    if (showReplies) {\r\n      return (\r\n        <Reply\r\n          key={replyIndex}\r\n          comment={props.comment}\r\n          commentIndex={props.commentIndex}\r\n          reply={reply}\r\n          replyIndex={replyIndex}\r\n          post={props.post}\r\n          comments={props.comments}\r\n          setcomments={props.setcomments}\r\n          commentReplies={commentReplies}\r\n          setcommentReplies={setcommentReplies}\r\n          setposted={props.setposted}\r\n        ></Reply>\r\n      )\r\n    }\r\n    return null\r\n  }\r\n  return (\r\n    <div className={classes.comments}>\r\n      <div className={classes.commDiv}>\r\n        <div className={classes.flex}>\r\n          <img\r\n            src={`images/avatars/${user.avatar}`}\r\n            alt=''\r\n            className={classes.smImg}\r\n          />\r\n          <div className={classes.comment}>\r\n            <span className={classes.bold}>\r\n              {props.comment.poster.userName}\r\n            </span>\r\n            <span className={classes.commCaption}>{props.comment.caption}</span>\r\n          </div>\r\n        </div>\r\n        {!commentLiked ? (\r\n          <span className={classes.comLikeButton}>\r\n            <i className='far fa-heart' onClick={comLikeBtnHandler}></i>\r\n          </span>\r\n        ) : (\r\n          <span className={classes.comLikeButton}>\r\n            <i className='fas fa-heart' onClick={comUnlikeBtnHandler}></i>\r\n          </span>\r\n        )}\r\n      </div>\r\n      <span className={classes.commLikes}>\r\n        {props.comment.likedBy.length} likes\r\n      </span>\r\n      <span className={classes.replyBtn} onClick={replyStateHandler}>\r\n        reply\r\n      </span>\r\n      {viewRepliesRender()}\r\n      {replyState ? (\r\n        <div className={classes.container}>\r\n          <input\r\n            className={classes.inputAComment}\r\n            type='text'\r\n            placeholder='Add a public reply...'\r\n            onChange={replyMsgHandler}\r\n            name='commentInput'\r\n            onFocus={onFocus}\r\n            onBlur={onBlur}\r\n            ref={replyCommInput}\r\n          />\r\n          <div\r\n            className={!replyFocusState ? classes.line : classes.line2}\r\n          ></div>\r\n          <div className={classes.btnGrp}>\r\n            <div className={classes.postCancelBtn} onClick={cancelBtnHandler}>\r\n              CANCEL\r\n            </div>\r\n            <div className={classes.postReplyBtn} onClick={replyBtnHandler}>\r\n              POST\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {commentReplies.map((reply, replyIndex) =>\r\n        replyHandler(reply, replyIndex)\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { Post } from './Post'\r\nexport default Post\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Post.module.scss'\r\nimport Postcomment from '../Postcomment'\r\nimport { constructDate } from '../../functions'\r\nimport { UserContext } from '../../userContext'\r\nimport { PostsContext } from '../../postsContext'\r\nimport { postRequest } from '../../api'\r\n\r\nexport const Post = (props) => {\r\n  const [comments, setcomments] = useState([])\r\n  const [commentState, setcommentState] = useState('')\r\n  const [liked, setliked] = useState(false)\r\n  const [post, setpost] = useState({})\r\n  const { user, setuser } = useContext(UserContext)\r\n  const { posts, setposts } = useContext(PostsContext)\r\n  const commentInput = React.createRef()\r\n\r\n  useEffect(() => {\r\n    setcomments(props.post.comments)\r\n    setpost(props.post)\r\n    const usersWhoLikedPostArr = [...props.post.likedBy]\r\n    const found = usersWhoLikedPostArr.includes(`${user._id}`)\r\n    if (found) {\r\n      setliked(true)\r\n    } else {\r\n      setliked(false)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [posts])\r\n\r\n  const commentInputHandler = (event) => {\r\n    setcommentState(event.target.value)\r\n  }\r\n  const commentPostHandler = () => {\r\n    const newComment = {\r\n      caption: commentState,\r\n      poster: user._id,\r\n      likedBy: [],\r\n      post: props.post._id,\r\n      date: constructDate(),\r\n      replies: [],\r\n    }\r\n    const commentsArr = [...props.post.comments, newComment]\r\n    const postCopy = { ...props.post }\r\n    postCopy.comments = commentsArr\r\n    const allPosts = [...posts]\r\n    allPosts[props.index] = postCopy\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        createComment(commentInput: {\r\n          caption: \"${commentState}\"\r\n          poster: \"${user._id}\"\r\n          likedBy: []\r\n          post: \"${props.post._id}\"\r\n          date: \"${constructDate()}\"\r\n          \r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        props.setposted(allPosts)\r\n        setposts(allPosts)\r\n        props.setposted(allPosts)\r\n      }\r\n    })\r\n    commentInput.current.value = ''\r\n  }\r\n  const likeBtnHandler = () => {\r\n    setliked(true)\r\n    const postClone = { ...props.post }\r\n    const userLikedArr = [...props.post.likedBy, user._id]\r\n    postClone.likedBy = userLikedArr\r\n\r\n    const allposts = [...props.posts]\r\n    allposts[props.index] = postClone\r\n    const arr = JSON.stringify(userLikedArr)\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        postUpdate(postUpdateInput: {\r\n          id: \"${props.post._id}\",\r\n          likedBy: ${arr}\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        setposts(allposts)\r\n        props.setposted(allposts)\r\n      }\r\n    })\r\n  }\r\n\r\n  const unlikeBtnHandler = () => {\r\n    setliked(false)\r\n    const postClone = { ...post }\r\n    const userLikedArr = postClone.likedBy.filter(\r\n      (user) => user._id !== user._id\r\n    )\r\n    const allposts = [...posts]\r\n    allposts[props.index] = postClone\r\n    postClone.likedBy = userLikedArr\r\n    const arr = JSON.stringify(userLikedArr)\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        postUpdate(postUpdateInput: {\r\n          id: \"${props.post._id}\",\r\n          likedBy: ${arr}\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        setposts(allposts)\r\n        props.setposted(allposts)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <section className={classes.cardContainer}>\r\n      <div className={classes.card}>\r\n        <div className={classes.cardUser}>\r\n          <img\r\n            src={`images/avatars/${user.avatar}`}\r\n            alt=''\r\n            className={classes.smImg}\r\n          />\r\n          <div className={classes.cardUsername}>\r\n            {props.post.poster.userName ? props.post.poster.userName : null}\r\n          </div>\r\n        </div>\r\n        <img\r\n          src={`images/postpics/${props.post.picture}`}\r\n          alt=''\r\n          className={classes.cardImage}\r\n        />\r\n        <div className={classes.commentSection}>\r\n          <div className={classes.socialIcons}>\r\n            <div>\r\n              {!liked ? (\r\n                <span className={classes.likeButton}>\r\n                  <i className='far fa-heart' onClick={likeBtnHandler}></i>\r\n                </span>\r\n              ) : (\r\n                <span className={classes.likeButton}>\r\n                  <i className='fas fa-heart' onClick={unlikeBtnHandler}></i>\r\n                </span>\r\n              )}\r\n\r\n              <span className={classes.commentButton}>\r\n                <i className='far fa-comment'></i>\r\n              </span>\r\n            </div>\r\n            <i className='far fa-bookmark'></i>\r\n          </div>\r\n        </div>\r\n        <div className={classes.likeSection}>\r\n          <span className={classes.counter}>\r\n            {' '}\r\n            {props.post.likedBy.length} likes\r\n          </span>\r\n        </div>\r\n\r\n        {props.post.comments.map((comment, commentIndex) => (\r\n          <Postcomment\r\n            key={commentIndex}\r\n            comment={comment}\r\n            comments={comments}\r\n            post={props.post}\r\n            index={props.index}\r\n            posts={props.posts}\r\n            setposts={props.setposts}\r\n            commentIndex={commentIndex}\r\n            setcomments={setcomments}\r\n            setposted={props.setposted}\r\n          ></Postcomment>\r\n        ))}\r\n\r\n        <div className={classes.addAComment}>\r\n          <input\r\n            className={classes.inputAComment}\r\n            type='text'\r\n            placeholder='Add a comment...'\r\n            onChange={commentInputHandler}\r\n            name='commentInput'\r\n            ref={commentInput}\r\n          />\r\n          <div className={classes.postAComment} onClick={commentPostHandler}>\r\n            Post\r\n          </div>\r\n          <div className={classes.line}></div>\r\n          {/* <i className='fas fa-ellipsis-h'></i> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import { Feed } from './Feed'\r\nexport default Feed\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Feed.module.scss'\r\nimport axios from 'axios'\r\nimport Post from '../../components/Post'\r\nimport { UserContext } from '../../userContext'\r\nimport { PostsContext } from '../../postsContext'\r\nimport { constructDate } from '../../functions'\r\nimport { Link } from 'react-router-dom'\r\nimport { UsersContext } from '../../usersContext'\r\n\r\nexport const Feed = (props) => {\r\n  const [postFormState, setpostFormState] = useState(false)\r\n\r\n  const [captionState, setcaptionState] = useState('')\r\n\r\n  const [fileState, setfileState] = useState({})\r\n\r\n  const { users, setusers } = useContext(UsersContext)\r\n\r\n  const { user, setuser } = useContext(UserContext)\r\n\r\n  const { posts, setposts } = useContext(PostsContext)\r\n\r\n  const [postposted, setpostposted] = useState(0)\r\n\r\n  const [counter, setcounter] = useState(1)\r\n  useEffect(() => {}, [])\r\n\r\n  return (\r\n    <>\r\n      {posts.length > 0\r\n        ? posts.map((post, index) => (\r\n            <Post\r\n              users={props.users}\r\n              setusers={props.setusers}\r\n              post={post}\r\n              posts={posts}\r\n              setposts={setposts}\r\n              index={index}\r\n              key={index}\r\n              setposted={props.setposted}\r\n              posted={props.posted}\r\n              setpostposted={setpostposted}\r\n              // postUser={postUser}\r\n              // setpostUser={setpostUser}\r\n            ></Post>\r\n          ))\r\n        : null}\r\n    </>\r\n  )\r\n}\r\n","import { Profile } from './Profile'\r\nexport default Profile\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../userContext'\r\nimport classes from './Profile.module.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Profile = (props) => {\r\n  const { user, setuser } = useContext(UserContext)\r\n  const [following, setfollowing] = useState(false)\r\n  useEffect(() => {\r\n    const isFollowing = props.profileUser.followedBy.includes(user._id)\r\n\r\n    isFollowing ? setfollowing(true) : setfollowing(false)\r\n  }, [])\r\n\r\n  const followBtnHandler = () => {\r\n    const loggedInUser = { ...user }\r\n\r\n    const profileUser = { ...props.profileUser }\r\n\r\n    // creating a clone of logged in user\r\n\r\n    loggedInUser.following = [...loggedInUser.following, profileUser._id]\r\n\r\n    const logggedInFollowingArr = JSON.stringify([...loggedInUser.following])\r\n\r\n    const loggedInFollowedArr = JSON.stringify([...loggedInUser.followedBy])\r\n\r\n    // creating a mutation for the logged in user\r\n\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        userUpdate(userUpdateInput: {\r\n          id: \"${loggedInUser._id}\"\r\n          followedBy: ${loggedInFollowedArr}\r\n          following: ${logggedInFollowingArr}\r\n          phoneNumber: \"${loggedInUser.phoneNumber}\"\r\n          gender: \"${loggedInUser.gender}\"\r\n          bio: \"${loggedInUser.bio}\"\r\n          userName: \"${loggedInUser.userName}\"\r\n          email: \"${loggedInUser.email}\"\r\n          fullName: \"${loggedInUser.fullName}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    // committing the mutation for the logged in user\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then((header) => {\r\n      if (header.ok) {\r\n        setuser(loggedInUser)\r\n        props.setposted(loggedInUser)\r\n        return header.json()\r\n      } else {\r\n        console.log(header)\r\n      }\r\n    })\r\n\r\n    // creating a clone of profile user\r\n\r\n    const allUsers = [...props.users]\r\n\r\n    profileUser.followedBy = [...profileUser.followedBy, loggedInUser._id]\r\n\r\n    allUsers[props.profileIndex] = profileUser\r\n\r\n    const profileFollowedArr = JSON.stringify([...profileUser.followedBy])\r\n\r\n    const profileFollowingArr = JSON.stringify([...profileUser.following])\r\n\r\n    // creating a mutation of profile user\r\n\r\n    requestBody = {\r\n      query: `\r\n      mutation {\r\n        userUpdate(userUpdateInput: {\r\n          id: \"${profileUser._id}\"\r\n          followedBy: ${profileFollowedArr}\r\n          following: ${profileFollowingArr}\r\n          phoneNumber: \"${profileUser.phoneNumber}\"\r\n          gender: \"${profileUser.gender}\"\r\n          bio: \"${profileUser.bio}\"\r\n          userName: \"${profileUser.userName}\"\r\n          email: \"${profileUser.email}\"\r\n          fullName: \"${profileUser.fullName}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    // committing the mutation of profile user\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then((header) => {\r\n      if (header.ok) {\r\n        props.setusers(allUsers)\r\n        setfollowing(true)\r\n        props.setposted(loggedInUser)\r\n\r\n        return header.json()\r\n      } else {\r\n        console.log(header)\r\n      }\r\n    })\r\n  }\r\n\r\n  const unFollowBtnHandler = () => {\r\n    const loggedInUser = { ...user }\r\n\r\n    const profileUser = { ...props.profileUser }\r\n\r\n    // creating a clone of logged in user\r\n\r\n    loggedInUser.following = loggedInUser.following.filter(\r\n      (id) => id !== profileUser._id\r\n    )\r\n\r\n    const loggedInUserFollowingArr = JSON.stringify([...loggedInUser.following])\r\n\r\n    const loggedInFollowedArr = JSON.stringify([...loggedInUser.followedBy])\r\n\r\n    // creating a mutation for the logged in user\r\n\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        userUpdate(userUpdateInput: {\r\n          id: \"${loggedInUser._id}\"\r\n          followedBy: ${loggedInFollowedArr}\r\n          following: ${loggedInUserFollowingArr}\r\n          phoneNumber: \"${loggedInUser.phoneNumber}\"\r\n          gender: \"${loggedInUser.gender}\"\r\n          bio: \"${loggedInUser.bio}\"\r\n          userName: \"${loggedInUser.userName}\"\r\n          email: \"${loggedInUser.email}\"\r\n          fullName: \"${loggedInUser.fullName}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    // committing the mutation for the logged in user\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then((header) => {\r\n      if (header.ok) {\r\n        setuser(loggedInUser)\r\n        props.setposted(loggedInUser)\r\n\r\n        return header.json()\r\n      } else {\r\n        console.log(header)\r\n      }\r\n    })\r\n\r\n    // creating a clone of profile user\r\n\r\n    const allUsers = [...props.users]\r\n\r\n    profileUser.followedBy = profileUser.followedBy.filter(\r\n      (id) => id !== loggedInUser._id\r\n    )\r\n\r\n    allUsers[props.profileIndex] = profileUser\r\n\r\n    const profileUserFollowedArr = JSON.stringify([...profileUser.followedBy])\r\n\r\n    const profileFollowingArr = JSON.stringify([...profileUser.following])\r\n\r\n    // creating a mutation of profile user\r\n\r\n    requestBody = {\r\n      query: `\r\n      mutation {\r\n        userUpdate(userUpdateInput: {\r\n          id: \"${profileUser._id}\"\r\n          followedBy: ${profileUserFollowedArr}\r\n          following: ${profileFollowingArr}\r\n          phoneNumber: \"${profileUser.phoneNumber}\"\r\n          gender: \"${profileUser.gender}\"\r\n          bio: \"${profileUser.bio}\"\r\n          userName: \"${profileUser.userName}\"\r\n          email: \"${profileUser.email}\"\r\n          fullName: \"${profileUser.fullName}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n\r\n    // committing the mutation of profile user\r\n\r\n    fetch('http://localhost:8000/graphql', {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }).then((header) => {\r\n      if (header.ok) {\r\n        props.setusers(allUsers)\r\n        setfollowing(false)\r\n        props.setposted(loggedInUser)\r\n\r\n        return header.json()\r\n      } else {\r\n        console.log(header)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.profile}>\r\n        <div className={classes.profileSection}>\r\n          <img\r\n            className={classes.avatar}\r\n            src={`images/avatars/${props.profileUser.avatar}`}\r\n            alt='#'\r\n          />\r\n\r\n          <div className={classes.profileStats}>\r\n            <div className={classes.firstRow}>\r\n              <span className={classes.userName}>\r\n                {props.profileUser.userName}\r\n              </span>\r\n              <Link to='/AccountSettings'>\r\n                <div className={classes.editBtn}>Edit Profile</div>\r\n              </Link>\r\n\r\n              {user._id !== props.profileUser._id ? (\r\n                !following ? (\r\n                  <div className={classes.followBtn} onClick={followBtnHandler}>\r\n                    {' '}\r\n                    Follow{' '}\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className={classes.followBtn}\r\n                    onClick={unFollowBtnHandler}\r\n                  >\r\n                    {' '}\r\n                    Unfollow{' '}\r\n                  </div>\r\n                )\r\n              ) : null}\r\n            </div>\r\n            <div className={classes.secondRow}>\r\n              <span>{props.profileUser.posts.length} posts</span>\r\n              <span className={classes.followers}>\r\n                {props.profileUser.followedBy.length} followers\r\n              </span>\r\n              <span>{props.profileUser.following.length} following</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={classes.postSection}>\r\n          {props.profileUser.posts.length > 0 ? (\r\n            props.profileUser.posts.map((post, index) => (\r\n              <img\r\n                key={index}\r\n                className={classes.post}\r\n                src={`images/postpics/${post.picture}`}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div className={classes.noPosts}> You currently have no posts </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { ProfileSettings } from './ProfileSettings'\r\nexport default ProfileSettings\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { UserContext } from '../../userContext'\r\nimport classes from './ProfileSettings.module.scss'\r\nimport Axios from 'axios'\r\nimport { PostsContext } from '../../postsContext'\r\nimport { UsersContext } from '../../usersContext'\r\nimport { postRequest } from '../../api'\r\n\r\nexport const ProfileSettings = (props) => {\r\n  //states\r\n  const { user, setuser } = useContext(UserContext)\r\n  const { users, setusers } = useContext(UsersContext)\r\n  const [profileInfo, setprofileInfo] = useState({})\r\n  const { posts, setposts } = useContext(PostsContext)\r\n  const [profile, setprofile] = useState(true)\r\n  const [emailError, setemailError] = useState(false)\r\n  const [userNameError, setuserNameError] = useState(false)\r\n  const [passwordError, setpasswordError] = useState('')\r\n  const [changePassword, setchangePassword] = useState(false)\r\n  //states\r\n\r\n  //refs\r\n  const uploadBtn = React.createRef()\r\n  const userNameInput = React.createRef()\r\n  const nameInput = React.createRef()\r\n  const bioInput = React.createRef()\r\n  const emailInput = React.createRef()\r\n  const phoneInput = React.createRef()\r\n  const genderInput = React.createRef()\r\n  const oldPassInput = React.createRef()\r\n  const newPassInput = React.createRef()\r\n  const rnewPassInput = React.createRef()\r\n  //refs\r\n\r\n  //fetch posts\r\n  useEffect(() => {\r\n    const token = JSON.parse(localStorage.getItem('token'))\r\n    if (token === null) {\r\n      window.location.href = 'http://localhost:3000/login'\r\n    }\r\n  }, [])\r\n  //fetch posts\r\n\r\n  //input state handlers\r\n  const profileInputHandler = (event) => {\r\n    setprofileInfo({ ...profileInfo, [event.target.name]: event.target.value })\r\n  }\r\n  const changePasswordRender = () => {\r\n    setchangePassword(true)\r\n    setprofile(false)\r\n  }\r\n  const changeProfileRender = () => {\r\n    setprofile(true)\r\n    setchangePassword(false)\r\n  }\r\n  //input state handlers\r\n\r\n  //edit profile handler\r\n  const userSubmitHandler = () => {\r\n    let nameCopy = ''\r\n    let userNameCopy = ''\r\n    let bioCopy = ''\r\n    let phoneCopy = ''\r\n    let genderCopy = ''\r\n    let emailCopy = ''\r\n    let allUsers = [...users]\r\n    let userCopy = { ...user }\r\n\r\n    if (!profileInfo.userName) {\r\n      if (!user.userName) {\r\n        userNameCopy = ''\r\n      } else {\r\n        userNameCopy = user.userName\r\n      }\r\n    } else {\r\n      userNameCopy = profileInfo.userName\r\n    }\r\n    if (!profileInfo.name) {\r\n      if (!user.fullName) {\r\n        nameCopy = ''\r\n      } else {\r\n        nameCopy = user.fullName\r\n      }\r\n    } else {\r\n      nameCopy = profileInfo.name\r\n    }\r\n    if (!profileInfo.bio) {\r\n      if (!user.bio) {\r\n        bioCopy = ''\r\n      } else {\r\n        bioCopy = user.bio\r\n      }\r\n    } else {\r\n      bioCopy = profileInfo.bio\r\n    }\r\n    if (!profileInfo.phone) {\r\n      if (!user.phoneNumber) {\r\n        phoneCopy = ''\r\n      } else {\r\n        phoneCopy = user.phoneNumber\r\n      }\r\n    } else {\r\n      phoneCopy = profileInfo.phone\r\n    }\r\n    if (!profileInfo.email) {\r\n      if (!user.email) {\r\n        emailCopy = ''\r\n      } else {\r\n        emailCopy = user.email\r\n      }\r\n    } else {\r\n      emailCopy = profileInfo.email\r\n    }\r\n    if (!profileInfo.gender) {\r\n      if (!user.gender) {\r\n        genderCopy = ''\r\n      } else {\r\n        genderCopy = user.gender\r\n      }\r\n    } else {\r\n      genderCopy = profileInfo.gender\r\n    }\r\n\r\n    userCopy.userName = userNameCopy\r\n    userCopy.email = emailCopy\r\n    userCopy.bio = bioCopy\r\n    userCopy.gender = genderCopy\r\n    userCopy.phoneNumber = phoneCopy\r\n    userCopy.fullName = nameCopy\r\n    const userIndex = props.users.findIndex(\r\n      (findUser) => user._id === findUser._id\r\n    )\r\n    allUsers[userIndex] = userCopy\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        userUpdate(userUpdateInput: {\r\n        \r\n        id: \"${user._id}\"\r\n          phoneNumber: \"${phoneCopy}\"\r\n          gender: \"${genderCopy}\"\r\n          bio:\"${bioCopy}\"\r\n          userName: \"${userNameCopy}\"\r\n          email:\"${emailCopy}\"\r\n          followedBy: ${JSON.stringify(user.followedBy)}\r\n          following: ${JSON.stringify(user.following)}\r\n          fullName: \"${nameCopy}\"\r\n          \r\n        })\r\n        {\r\n          _id\r\n        }\r\n        }`,\r\n    }\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response.errors) {\r\n        if (response.errors[0].message.includes('User')) {\r\n          setuserNameError(true)\r\n        } else {\r\n          setuserNameError(false)\r\n        }\r\n        if (response.errors[0].message.includes('Email')) {\r\n          setemailError(true)\r\n        } else {\r\n          setemailError(false)\r\n        }\r\n      } else {\r\n        setemailError(false)\r\n        setuserNameError(false)\r\n      }\r\n    })\r\n  }\r\n  //edit profile handler\r\n\r\n  //change password handler\r\n  const passwordChangeHandler = () => {\r\n    setpasswordError('')\r\n    if (profileInfo.newPass.length < 3) {\r\n      setpasswordError('New password needs to be atleast 3 characters')\r\n    } else {\r\n      if (profileInfo.newPass !== profileInfo.rnewPass) {\r\n        setpasswordError('Please make sure you repeated the password correctly')\r\n      }\r\n    }\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        passwordUpdate(userPassUpdateInput: {\r\n      \r\n        oldPass: \"${profileInfo.oldPass}\"\r\n        newPass: \"${profileInfo.newPass}\"\r\n        id: \"${user._id}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }\r\n      `,\r\n    }\r\n    postRequest(requestBody).then((response) => {\r\n      if (response.errors) {\r\n        if (response.errors[0].message.includes('Old')) {\r\n          passwordError('Old password is incorrect')\r\n        } else {\r\n          passwordError('')\r\n        }\r\n      }\r\n    })\r\n  }\r\n  //change password handler\r\n\r\n  //change avatar handler\r\n\r\n  const changeAvatar = (event) => {\r\n    const data = new FormData()\r\n    data.append('file', event.target.files[0])\r\n    Axios.post('http://localhost:8000/upload2', data, {}).then((res) => {})\r\n    const userClone = { ...user }\r\n    userClone.avatar = event.target.files[0].name\r\n    const allUsers = [...props.users]\r\n    const userIndex = props.users.findIndex(\r\n      (findUser) => user._id === findUser._id\r\n    )\r\n    allUsers[userIndex] = userClone\r\n\r\n    let requestBody = {\r\n      query: `\r\n      mutation {\r\n        avatarUpdate(userAvatarUpdateInput:{\r\n          id: \"${user._id}\"\r\n          avatar: \"${event.target.files[0].name}\"\r\n        })\r\n        {\r\n          _id\r\n        }\r\n        }\r\n      `,\r\n    }\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        setusers(allUsers)\r\n        setuser(userClone)\r\n      }\r\n    })\r\n  }\r\n\r\n  //change avatar handler\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.settings}>\r\n        <div className={classes.sideBar}>\r\n          <div\r\n            className={`${classes.editProfile} ${\r\n              profile ? classes.active : null\r\n            }`}\r\n            onClick={changeProfileRender}\r\n          >\r\n            Edit Profile\r\n          </div>\r\n          <div\r\n            className={`${classes.changePassword} ${\r\n              changePassword ? classes.active : null\r\n            }`}\r\n            onClick={changePasswordRender}\r\n          >\r\n            Change Password\r\n          </div>\r\n        </div>\r\n\r\n        {profile ? (\r\n          <form className={classes.profile}>\r\n            <div className={classes.avatarContainer}>\r\n              <div\r\n                className={classes.avatar}\r\n                onClick={() => {\r\n                  uploadBtn.current.click()\r\n                }}\r\n              >\r\n                <img src={`images/avatars/${user.avatar}`} alt='' />\r\n                <input\r\n                  type='file'\r\n                  name='avatar'\r\n                  id='avatar'\r\n                  onChange={changeAvatar}\r\n                  ref={uploadBtn}\r\n                  className={classes.hidden}\r\n                />\r\n              </div>\r\n              <span className={classes.nameUser}>\r\n                {!profileInfo.name ? user.fullName : profileInfo.name}\r\n              </span>\r\n            </div>\r\n            <div className={classes.name}>\r\n              <label\r\n                htmlFor='name'\r\n                onClick={() => {\r\n                  nameInput.current.focus()\r\n                }}\r\n              >\r\n                Name\r\n              </label>\r\n              <input\r\n                type='text'\r\n                // value={user.userName || ''}\r\n                defaultValue={user.fullName}\r\n                onChange={profileInputHandler}\r\n                name='name'\r\n                ref={nameInput}\r\n              />\r\n            </div>\r\n            <div className={classes.userName}>\r\n              <label\r\n                htmlFor='userName'\r\n                onClick={() => {\r\n                  userNameInput.current.focus()\r\n                }}\r\n              >\r\n                Username\r\n              </label>\r\n              <input\r\n                type='text'\r\n                // value={user.userName || ''}\r\n                defaultValue={user.userName}\r\n                onChange={profileInputHandler}\r\n                name='userName'\r\n                ref={userNameInput}\r\n              />\r\n            </div>\r\n            {userNameError ? (\r\n              <span className={classes.error}>Username is already in use</span>\r\n            ) : null}\r\n            <div className={classes.bio}>\r\n              <label\r\n                htmlFor='bio'\r\n                onClick={() => {\r\n                  bioInput.current.focus()\r\n                }}\r\n              >\r\n                Bio\r\n              </label>\r\n              <input\r\n                type='text'\r\n                // value={user.userName || ''}\r\n                defaultValue={user.bio}\r\n                onChange={profileInputHandler}\r\n                name='bio'\r\n                ref={bioInput}\r\n              />\r\n            </div>\r\n            <div className={classes.email}>\r\n              <label\r\n                htmlFor='email'\r\n                onClick={() => {\r\n                  emailInput.current.focus()\r\n                }}\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                type='email'\r\n                defaultValue={user.email}\r\n                onChange={profileInputHandler}\r\n                name='email'\r\n                ref={emailInput}\r\n              />\r\n            </div>\r\n            {emailError ? (\r\n              <span className={classes.error}>Email is already in use</span>\r\n            ) : null}\r\n            <div className={classes.phone}>\r\n              <label\r\n                htmlFor='phone'\r\n                onClick={() => {\r\n                  phoneInput.current.focus()\r\n                }}\r\n              >\r\n                Phone Number\r\n              </label>\r\n              <input\r\n                type='text'\r\n                // value={user.userName || ''}\r\n                defaultValue={user.phoneNumber}\r\n                onChange={profileInputHandler}\r\n                name='phone'\r\n                ref={phoneInput}\r\n              />\r\n            </div>\r\n            <div className={classes.gender}>\r\n              <label\r\n                htmlFor='gender'\r\n                onClick={() => {\r\n                  genderInput.current.focus()\r\n                }}\r\n              >\r\n                Gender\r\n              </label>\r\n              <input\r\n                type='text'\r\n                defaultValue={user.gender}\r\n                onChange={profileInputHandler}\r\n                name='gender'\r\n                ref={genderInput}\r\n              />\r\n            </div>\r\n\r\n            <span className={classes.submitBtn} onClick={userSubmitHandler}>\r\n              Submit\r\n            </span>\r\n          </form>\r\n        ) : null}\r\n\r\n        {changePassword ? (\r\n          <form className={classes.profile}>\r\n            <div className={classes.avatarContainer}>\r\n              <div\r\n                className={classes.avatar}\r\n                onClick={() => {\r\n                  uploadBtn.current.click()\r\n                }}\r\n              >\r\n                <img src={`images/avatars/${user.avatar}`} alt='' />\r\n                <input\r\n                  type='file'\r\n                  name='avatar'\r\n                  id='avatar'\r\n                  onChange={changeAvatar}\r\n                  ref={uploadBtn}\r\n                  className={classes.hidden}\r\n                />\r\n              </div>\r\n              <span className={classes.nameUser}>\r\n                {!profileInfo.name ? user.fullName : profileInfo.name}\r\n              </span>\r\n            </div>\r\n\r\n            <div className={classes.userName}>\r\n              <label\r\n                htmlFor='oldPass'\r\n                onClick={() => {\r\n                  oldPassInput.current.focus()\r\n                }}\r\n              >\r\n                Old password\r\n              </label>\r\n              <input\r\n                type='password'\r\n                onChange={profileInputHandler}\r\n                name='oldPass'\r\n                ref={oldPassInput}\r\n              />\r\n            </div>\r\n            <div className={classes.userName}>\r\n              <label\r\n                htmlFor='newPass'\r\n                onClick={() => {\r\n                  newPassInput.current.focus()\r\n                }}\r\n              >\r\n                New Password\r\n              </label>\r\n              <input\r\n                type='password'\r\n                onChange={profileInputHandler}\r\n                name='newPass'\r\n                ref={newPassInput}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.password}>\r\n              <label\r\n                htmlFor='rnewPass'\r\n                onClick={() => {\r\n                  rnewPassInput.current.focus()\r\n                }}\r\n              >\r\n                Repeat New Password\r\n              </label>\r\n              <input\r\n                type='password'\r\n                onChange={profileInputHandler}\r\n                name='rnewPass'\r\n                ref={rnewPassInput}\r\n              />\r\n            </div>\r\n\r\n            <span\r\n              className={classes.passwordBtn}\r\n              onClick={passwordChangeHandler}\r\n            >\r\n              Change Password\r\n            </span>\r\n\r\n            {passwordError.length > 0 ? (\r\n              <span className={classes.passwordError}>{passwordError}</span>\r\n            ) : null}\r\n          </form>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Header } from './Header'\r\nexport default Header","import React, { useState, useEffect, useContext } from 'react'\r\nimport classes from './Header.module.scss'\r\nimport axios from 'axios'\r\nimport { UserContext } from '../../userContext'\r\nimport { UsersContext } from '../../usersContext'\r\nimport { PostsContext } from '../../postsContext'\r\nimport { constructDate } from '../../functions'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { postRequest } from '../../api'\r\n\r\nexport const Header = (props) => {\r\n  const [postFormState, setpostFormState] = useState(false)\r\n\r\n  const [captionState, setcaptionState] = useState('')\r\n\r\n  const [fileState, setfileState] = useState({})\r\n\r\n  const { user, setuser } = useContext(UserContext)\r\n\r\n  const { users, setusers } = useContext(UsersContext)\r\n\r\n  const { posts, setposts } = useContext(PostsContext)\r\n\r\n  const [filteredUsers, setfilteredUsers] = useState([])\r\n\r\n  const postHandler = () => {\r\n    setpostFormState(true)\r\n  }\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.removeItem('token')\r\n  }\r\n  const searchFilterHandler = (event) => {\r\n    if (!event.target.value) {\r\n      setfilteredUsers([])\r\n    } else {\r\n      const displayUsers = users.filter((data) => {\r\n        if (event.target.value === null) return []\r\n        else if (\r\n          data.userName\r\n            .toLowerCase()\r\n            .includes(event.target.value.toLowerCase()) ||\r\n          data.fullName.toLowerCase().includes(event.target.value.toLowerCase())\r\n        ) {\r\n          return data\r\n        }\r\n      })\r\n      setfilteredUsers(displayUsers)\r\n    }\r\n  }\r\n  const onChangeHandler = (event) => {\r\n    setfileState(event.target.files[0])\r\n  }\r\n\r\n  const captionHandler = (event) => {\r\n    setcaptionState(event.target.value)\r\n  }\r\n  const cancelPostFormHandler = () => {\r\n    setpostFormState(false)\r\n  }\r\n  const postFormHandler = (event) => {\r\n    event.preventDefault()\r\n    const data = new FormData()\r\n    data.append('file', fileState)\r\n    axios.post('http://localhost:8000/upload', data, {}).then((res) => {\r\n      console.log(res.statusText)\r\n    })\r\n    const post = {\r\n      picture: fileState.name,\r\n      caption: captionState,\r\n      poster: user.userName,\r\n      likedBy: [],\r\n      date: constructDate(),\r\n      comments: [],\r\n    }\r\n\r\n    let requestBody = {\r\n      query: `mutation {\r\n        createPost(postInput: {\r\n          caption: \"${captionState}\",\r\n          picture: \"${fileState.name}\",\r\n          likedBy: [],\r\n          date: \"${constructDate()}\",\r\n          poster: \"${user._id}\"\r\n          \r\n        })\r\n        {\r\n          _id\r\n        }\r\n      }`,\r\n    }\r\n\r\n    postRequest(requestBody).then((response) => {\r\n      if (response) {\r\n        console.log(response)\r\n        const postsArr = [post, ...posts]\r\n\r\n        setpostFormState(false)\r\n\r\n        setposts(postsArr)\r\n\r\n        props.setposted(postsArr)\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    <header>\r\n      {postFormState ? (\r\n        <div className={classes.background}>\r\n          <div className={classes.postContainer}>\r\n            <input type='text' onInput={captionHandler} />\r\n            <input type='file' name='file' onChange={onChangeHandler} />\r\n            <div className={classes.btnContainer}>\r\n              <div\r\n                className={classes.cancelBtn}\r\n                onClick={cancelPostFormHandler}\r\n              >\r\n                Cancel\r\n              </div>\r\n              <div className={classes.postBtn} onClick={postFormHandler}>\r\n                Post\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className={classes.headerContainer}>\r\n        <Link to={`/`} className={classes.logo}>\r\n          <i className='fab fa-2x fa-instagram'></i>\r\n          <div className={classes.verticalLine}></div>\r\n          <span className={classes.hidden}>Instagram</span>\r\n        </Link>\r\n        <div className={classes.desktop}>\r\n          <div className={classes.searchContainer}>\r\n            <i className={`fa fa-search ${classes.searchIcon} `}></i>\r\n            <input\r\n              className={classes.searchBar}\r\n              placeholder=' Search'\r\n              onChange={searchFilterHandler}\r\n            />\r\n            <ul\r\n              className={`\r\n                ${\r\n                  filteredUsers.length > 0\r\n                    ? classes.userLinkContainer\r\n                    : classes.invisible\r\n                } ${filteredUsers.length >= 5 ? classes.overFlow : null}`}\r\n            >\r\n              {filteredUsers.length > 0\r\n                ? filteredUsers.map((info, index) => (\r\n                    <li className={classes.userLink} key={index}>\r\n                      <Link to={`/${info.userName}`}>\r\n                        <img\r\n                          src={`images/avatars/${info.avatar}`}\r\n                          alt=''\r\n                          className={classes.smImg}\r\n                        />\r\n                        <div className={classes.userInfo}>\r\n                          <div className={classes.nickName}>\r\n                            {info.fullName}\r\n                          </div>\r\n                          <div className={classes.realName}>\r\n                            {info.userName}\r\n                          </div>\r\n                        </div>\r\n                        {/* <span>{data.country}</span> */}\r\n                      </Link>\r\n                    </li>\r\n                  ))\r\n                : null}\r\n            </ul>\r\n            {/* {keyword ? filteredUsers : null} */}\r\n          </div>\r\n        </div>\r\n        <div className={classes.icons}>\r\n          <span>\r\n            <i\r\n              className={`fas fa-plus ${classes.togglePost}`}\r\n              onClick={postHandler}\r\n            ></i>\r\n          </span>\r\n          <span>\r\n            <i className='far fa-compass'></i>\r\n          </span>\r\n          <span>\r\n            <i className='far fa-heart'></i>\r\n          </span>\r\n\r\n          {user !== null ? (\r\n            <Link to={`/${user.userName}`}>\r\n              <i className='far fa-user'></i>\r\n            </Link>\r\n          ) : null}\r\n          <Link to={`/login`} onClick={logoutHandler}>\r\n            Logout\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport './App.css'\r\nimport { BrowserRouter, Switch, Route, useLocation } from 'react-router-dom'\r\n\r\nimport Register from './pages/Register'\r\nimport Login from './pages/Login'\r\nimport Feed from './pages/Feed'\r\nimport Profile from './pages/Profile'\r\nimport { UserContext } from './userContext'\r\nimport { PostsContext } from './postsContext'\r\nimport ProfileSettings from './pages/ProfileSettings'\r\nimport { UsersContext } from './usersContext'\r\nimport Header from './components/Header'\r\n\r\nfunction App() {\r\n  const [user, setuser] = useState({})\r\n  const [posts, setposts] = useState([])\r\n  const [users, setusers] = useState([])\r\n  const [posted, setposted] = useState('')\r\n  const value = useMemo(() => ({ user, setuser }), [user, setuser])\r\n  const postsValue = useMemo(() => ({ posts, setposts }), [posts, setposts])\r\n  const usersValue = useMemo(() => ({ users, setusers }), [users, setusers])\r\n  const location = useLocation()\r\n  useEffect(() => {\r\n    const token = JSON.parse(localStorage.getItem('token'))\r\n    if (token === null) {\r\n      return\r\n    } else {\r\n      let requestBody = {\r\n        query: `query {\r\n        user(id: \"${token.userId}\")\r\n        {\r\n          _id\r\n          userName\r\n           email\r\n           avatar\r\n           followedBy\r\n           following\r\n           bio\r\n           gender\r\n           phoneNumber\r\n           fullName\r\n           posts {\r\n             _id\r\n             caption\r\n             picture\r\n             likedBy\r\n             date\r\n            poster {\r\n              _id\r\n              userName\r\n              email\r\n              avatar\r\n              phoneNumber\r\n              gender\r\n              bio\r\n              followedBy\r\n              following\r\n              fullName\r\n            }\r\n            comments {\r\n              _id\r\n              caption\r\n              likedBy\r\n              date\r\n              poster {\r\n                _id\r\n                userName\r\n                email\r\n                avatar\r\n                phoneNumber\r\n                gender\r\n                bio\r\n                followedBy\r\n                following\r\n                fullName\r\n                \r\n              }\r\n              replies {\r\n                  _id\r\n                  caption\r\n                  poster {\r\n                    _id\r\n                userName\r\n                email\r\n                avatar\r\n                phoneNumber\r\n                gender\r\n                bio\r\n                followedBy\r\n                following\r\n                fullName\r\n                  }\r\n                  likedBy\r\n                  date\r\n                }\r\n              \r\n              \r\n            }\r\n           }\r\n           \r\n            \r\n  \r\n           }\r\n      }`,\r\n      }\r\n\r\n      fetch('http://localhost:8000/graphql', {\r\n        method: 'POST',\r\n        body: JSON.stringify(requestBody),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n        .then((header) => {\r\n          console.log(header)\r\n          if (header.ok) {\r\n            return header.json()\r\n          } else {\r\n            console.log('error')\r\n          }\r\n        })\r\n        .then((response) => {\r\n          setuser(response.data.user)\r\n          const userCopy = response.data.user\r\n          let requestBody = {\r\n            query: `query {\r\n              users{\r\n                _id\r\n                userName\r\n                 email\r\n                 avatar\r\n                 followedBy\r\n                 following\r\n                 bio\r\n                 gender\r\n                 phoneNumber\r\n                 fullName\r\n                 posts {\r\n                   _id\r\n                   caption\r\n                   picture\r\n                   likedBy\r\n                   date\r\n                  poster {\r\n                    _id\r\n                    userName\r\n                    email\r\n                    avatar\r\n                    phoneNumber\r\n                    gender\r\n                    bio\r\n                    followedBy\r\n                    following\r\n                    fullName\r\n                  }\r\n                  comments {\r\n                    _id\r\n                    caption\r\n                    likedBy\r\n                    date\r\n                    poster {\r\n                      _id\r\n                      userName\r\n                      email\r\n                      avatar\r\n                      phoneNumber\r\n                      gender\r\n                      bio\r\n                      followedBy\r\n                      following\r\n                      fullName\r\n                      \r\n                    }\r\n                    replies {\r\n                        _id\r\n                        caption\r\n                        poster {\r\n                          _id\r\n                      userName\r\n                      email\r\n                      avatar\r\n                      phoneNumber\r\n                      gender\r\n                      bio\r\n                      followedBy\r\n                      following\r\n                      fullName\r\n                        }\r\n                        likedBy\r\n                        date\r\n                      }\r\n                    \r\n                    \r\n                  }\r\n                 }\r\n                 \r\n                  \r\n        \r\n                 }\r\n            }`,\r\n          }\r\n\r\n          fetch('http://localhost:8000/graphql', {\r\n            method: 'POST',\r\n            body: JSON.stringify(requestBody),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          })\r\n            .then((header) => {\r\n              console.log(header)\r\n              if (header.ok) {\r\n                return header.json()\r\n              } else {\r\n                console.log('error')\r\n              }\r\n            })\r\n            .then((response) => {\r\n              if (response) {\r\n                setusers(response.data.users)\r\n                const copyUsers = [...users]\r\n                let postsCopy = userCopy.posts\r\n                response.data.users.map((consumer, index) => {\r\n                  if (userCopy.following.includes(`${consumer._id}`)) {\r\n                    if (consumer.posts.length > 0) {\r\n                      postsCopy = [...postsCopy, ...consumer.posts]\r\n                    }\r\n                  }\r\n                })\r\n                setposts(postsCopy)\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              console.log(e)\r\n            })\r\n        })\r\n        .catch((e) => {\r\n          console.log(e)\r\n        })\r\n    }\r\n  }, [posted])\r\n\r\n  useEffect(() => {\r\n    // checkIfLoggedIn()\r\n    const token = JSON.parse(localStorage.getItem('token'))\r\n    if (token === null && window.location.pathname !== '/login') {\r\n      if (window.location.pathname !== '/register') {\r\n        window.location.href = '/login'\r\n      }\r\n    }\r\n  }, [posted])\r\n  // useEffect(() => {\r\n\r\n  // }, [user])\r\n  return (\r\n    <Switch>\r\n      <PostsContext.Provider value={postsValue}>\r\n        <UserContext.Provider value={value}>\r\n          <UsersContext.Provider value={usersValue}>\r\n            {location.pathname == '/register' ||\r\n            location.pathname == '/login' ? null : (\r\n              <Header setposted={setposted} />\r\n            )}\r\n            <Route\r\n              path={`/login`}\r\n              component={Login}\r\n              exact={true}\r\n              label='Login'\r\n            ></Route>\r\n            <Route\r\n              path={`/register`}\r\n              component={Register}\r\n              exact={true}\r\n              label='Register'\r\n            ></Route>\r\n            <Route\r\n              path={`/`}\r\n              render={() => (\r\n                <Feed\r\n                  users={users}\r\n                  setusers={setusers}\r\n                  posts={posts}\r\n                  setposts={setposts}\r\n                  posted={posted}\r\n                  setposted={setposted}\r\n                />\r\n              )}\r\n              exact={true}\r\n              label='Feed'\r\n            ></Route>\r\n            {users.map((profileUser, profileIndex) => (\r\n              <Route\r\n                key={profileIndex}\r\n                path={`/${profileUser.userName}`}\r\n                render={() => (\r\n                  <Profile\r\n                    profileUser={profileUser}\r\n                    users={users}\r\n                    profileIndex={profileIndex}\r\n                    setusers={setusers}\r\n                    posts={posts}\r\n                    setposts={setposts}\r\n                    setposted={setposted}\r\n                  />\r\n                )}\r\n                exact={true}\r\n                label='Profile'\r\n              ></Route>\r\n            ))}\r\n            <Route\r\n              path={`/AccountSettings`}\r\n              render={() => (\r\n                <ProfileSettings\r\n                  users={users}\r\n                  setusers={setusers}\r\n                  setposted={setposted}\r\n                />\r\n              )}\r\n              exact={true}\r\n              label='settings'\r\n            ></Route>\r\n          </UsersContext.Provider>\r\n        </UserContext.Provider>\r\n      </PostsContext.Provider>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bold\":\"Reply_bold__1L34U\",\"comments\":\"Reply_comments__vAh_w\",\"commDiv\":\"Reply_commDiv__buffY\",\"commLikes\":\"Reply_commLikes__3UN15\",\"smImg\":\"Reply_smImg__3ScYq\",\"flex\":\"Reply_flex__Ukb_d\",\"replyBtn\":\"Reply_replyBtn__3Ph2B\",\"inputAComment\":\"Reply_inputAComment__3GksM\",\"line\":\"Reply_line__1awdM\",\"line2\":\"Reply_line2__2Teav\",\"container\":\"Reply_container__22_f9\",\"btnGrp\":\"Reply_btnGrp__17MGN\",\"postCancelBtn\":\"Reply_postCancelBtn__1aTy5\",\"postReplyBtn\":\"Reply_postReplyBtn__1GRhY\"};"],"sourceRoot":""}